<UserControl x:Class="Observatory.UI.Views.Mail.MailFolderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="using:Observatory.UI.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:models="using:Observatory.Core.Models"
             xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
             xmlns:ui="using:Observatory.UI"
             d:DesignHeight="600"
             d:DesignWidth="500"
             mc:Ignorable="d">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
          <SolidColorBrush x:Key="FlaggedColor" Color="#FFFFFFCC"/>
          <SolidColorBrush x:Key="ArchiveIconColor" Color="#FF196A35"/>
          <SolidColorBrush x:Key="DeleteIconColor" Color="#FFD72831"/>
          <SolidColorBrush x:Key="FlagIconColor" Color="#FFAC2E00"/>
          <SolidColorBrush x:Key="UnflagIconColor" Color="#FFE32A34"/>
          <SolidColorBrush x:Key="HighImportanceIconColor" Color="#FFE8504F"/>
          <SolidColorBrush x:Key="UnreadColor" Color="{ThemeResource SystemAccentColorDark2}"/>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
          <SolidColorBrush x:Key="FlaggedColor" Color="#FFFFFFCC"/>
          <SolidColorBrush x:Key="ArchiveIconColor" Color="#FF196A35"/>
          <SolidColorBrush x:Key="DeleteIconColor" Color="#FFD72831"/>
          <SolidColorBrush x:Key="FlagIconColor" Color="#FFAC2E00"/>
          <SolidColorBrush x:Key="UnflagIconColor" Color="#FFE32A34"/>
          <SolidColorBrush x:Key="HighImportanceIconColor" Color="#FFE8504F"/>
          <SolidColorBrush x:Key="UnreadColor" Color="{ThemeResource SystemAccentColorDark2}"/>
        </ResourceDictionary>
      </ResourceDictionary.ThemeDictionaries>

      <Style x:Key="MessageListViewItemArchiveButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <FontIcon x:Name="Icon"
                        FontSize="16"
                        Glyph="{StaticResource ArchiveGlyph}">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource ArchiveIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource ArchiveIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
              </FontIcon>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="MessageListViewItemDeleteButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <FontIcon x:Name="Icon"
                        FontSize="16"
                        Glyph="{StaticResource DeleteGlyph}">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource DeleteIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource DeleteIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
              </FontIcon>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="MessageListViewItemToggleFlagButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ToggleButton">
              <Grid Background="{TemplateBinding Background}">
                <FontIcon x:Name="FlagIcon"
                          FontSize="16"
                          Glyph="{StaticResource FlagGlyph}"/>
                <FontIcon x:Name="UnflagIcon"
                          FontSize="16"
                          Glyph="{StaticResource UnflagGlyph}"
                          Visibility="Collapsed">
                  <FontIcon.RenderTransform>
                    <TranslateTransform X="2"/>
                  </FontIcon.RenderTransform>
                </FontIcon>
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                      <VisualState.Setters>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource FlagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                      <VisualState.Setters>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource FlagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <VisualState.Setters>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Checked">
                      <VisualState.Setters>
                        <Setter Target="UnflagIcon.Visibility" Value="Visible"/>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                        <Setter Target="UnflagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="CheckedPointerOver">
                      <VisualState.Setters>
                        <Setter Target="UnflagIcon.Visibility" Value="Visible"/>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                        <Setter Target="UnflagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="CheckedPressed">
                      <VisualState.Setters>
                        <Setter Target="UnflagIcon.Visibility" Value="Visible"/>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                        <Setter Target="UnflagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="CheckedDisabled">
                      <VisualState.Setters>
                        <Setter Target="UnflagIcon.Visibility" Value="Visible"/>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                        <Setter Target="UnflagIcon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style TargetType="controls:MessageListViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="controls:MessageListViewItem">
              <Grid x:Name="ContentGrid"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Rectangle HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             Fill="{ThemeResource UnreadColor}"
                             Visibility="{x:Bind ui:Converters.BoolNegationToVisibility(Message.IsRead), Mode=OneWay}"/>
                  <Grid Grid.Column="1"
                        Margin="8">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="CorrespondentsText"
                               FontSize="16"
                               Text="{x:Bind Message.Correspondents, Mode=OneWay}"/>
                    <StackPanel Grid.Column="1"
                                HorizontalAlignment="Right"
                                d:Visibility="Collapsed"
                                Orientation="Horizontal"
                                Spacing="3"
                                Visibility="{x:Bind ui:Converters.BoolNegationToVisibility(IsPointerOver), Mode=OneWay}">
                      <FontIcon FontSize="16"
                                Glyph="&#xE16C;"
                                Visibility="{x:Bind Message.HasAttachments, Mode=OneWay}"/>
                      <FontIcon x:Name="ImportanceIcon"
                                FontSize="16"
                                Visibility="Collapsed"/>
                      <FontIcon x:Name="FlagIcon"
                                FontSize="16"
                                Foreground="{ThemeResource UnflagIconColor}"
                                Glyph="&#xE129;"
                                Visibility="{x:Bind Message.IsFlagged, Mode=OneWay}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1"
                                HorizontalAlignment="Right"
                                d:Visibility="Visible"
                                Orientation="Horizontal"
                                Spacing="3"
                                Visibility="{x:Bind IsPointerOver, Mode=OneWay}">
                      <Button Command="{x:Bind Message.ArchiveCommand}"
                              Style="{StaticResource MessageListViewItemArchiveButtonStyle}"
                              ToolTipService.ToolTip="Archive this item"/>
                      <Button Command="{x:Bind Message.DeleteCommand}"
                              Style="{StaticResource MessageListViewItemDeleteButtonStyle}"
                              ToolTipService.ToolTip="Delete this item"/>
                      <controls:OneWayToggleButton x:Name="ToggleFlagButton"
                                                   Command="{x:Bind Message.ToggleFlagCommand, Mode=OneWay}"
                                                   IsChecked="{x:Bind Message.IsFlagged, Mode=OneWay}"
                                                   PointerExited="{x:Bind HandlePointerExited}"
                                                   Style="{StaticResource MessageListViewItemToggleFlagButtonStyle}"
                                                   ToolTipService.ToolTip="Set flag on this item"/>
                    </StackPanel>
                    <TextBlock x:Name="SubjectText"
                               Grid.Row="1"
                               Text="{x:Bind Message.Subject, Mode=OneWay}"/>
                    <TextBlock Grid.Row="1"
                               Grid.Column="1"
                               Margin="8,0,0,0"
                               FontSize="12"
                               Foreground="{ThemeResource SystemColorGrayTextBrush}"
                               Text="{x:Bind DisplayReceivedDateTime(Message.ReceivedDateTime), Mode=OneWay}"/>
                    <TextBlock Grid.Row="2"
                               d:Text="{Binding Preview}"
                               Foreground="{ThemeResource SystemColorGrayTextBrush}"
                               Text="{x:Bind Message.Preview, Mode=OneWay}"/>
                  </Grid>
                </Grid>
                <Rectangle Grid.Row="1"
                           Height="1"
                           HorizontalAlignment="Stretch"
                           Fill="{ThemeResource SystemBaseLowColor}"/>
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup>
                    <VisualState>
                      <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding StateName, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                      To="Normal"/>
                      </VisualState.StateTriggers>
                    </VisualState>

                    <VisualState>
                      <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding StateName, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                      To="PointerOver"/>
                      </VisualState.StateTriggers>
                      <VisualState.Setters>
                        <Setter Target="ContentGrid.Background" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>

                    <VisualState>
                      <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding StateName, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                      To="Selected"/>
                      </VisualState.StateTriggers>
                      <VisualState.Setters>
                        <Setter Target="ContentGrid.Background" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>

                    <VisualState>
                      <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding StateName, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                      To="Flagged"/>
                      </VisualState.StateTriggers>
                      <VisualState.Setters>
                        <Setter Target="ContentGrid.Background" Value="{ThemeResource FlaggedColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>

                  <VisualStateGroup>
                    <VisualState>
                      <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding Message.IsFlagged, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                      To="True"/>
                      </VisualState.StateTriggers>
                      <VisualState.Setters>
                        <Setter Target="ToggleFlagButton.(ToolTipService.ToolTip)" Value="Clear flag on this item"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>

                  <VisualStateGroup>
                    <VisualState>
                      <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding Message.IsRead, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                      To="False"/>
                      </VisualState.StateTriggers>
                      <VisualState.Setters>
                        <Setter Target="SubjectText.FontWeight" Value="SemiBold"/>
                        <Setter Target="CorrespondentsText.FontWeight" Value="SemiBold"/>
                        <Setter Target="SubjectText.Foreground" Value="{ThemeResource UnreadColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>

                  <VisualStateGroup>
                    <VisualState x:Name="Low">
                      <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding Message.Importance, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                          <triggers:IsEqualStateTrigger.To>
                            <models:Importance>Low</models:Importance>
                          </triggers:IsEqualStateTrigger.To>
                        </triggers:IsEqualStateTrigger>
                      </VisualState.StateTriggers>
                      <VisualState.Setters>
                        <Setter Target="ImportanceIcon.Glyph" Value="{StaticResource LowImportanceGlyph}"/>
                        <Setter Target="ImportanceIcon.Visibility" Value="Visible"/>
                      </VisualState.Setters>
                    </VisualState>

                    <VisualState x:Name="High">
                      <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{Binding Message.Importance, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                          <triggers:IsEqualStateTrigger.To>
                            <models:Importance>High</models:Importance>
                          </triggers:IsEqualStateTrigger.To>
                        </triggers:IsEqualStateTrigger>
                      </VisualState.StateTriggers>
                      <VisualState.Setters>
                        <Setter Target="ImportanceIcon.Glyph" Value="{StaticResource HighImportanceGlyph}"/>
                        <Setter Target="ImportanceIcon.Foreground" Value="{ThemeResource HighImportanceIconColor}"/>
                        <Setter Target="ImportanceIcon.Visibility" Value="Visible"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid BorderBrush="{ThemeResource SystemBaseLowColor}"
        BorderThickness="1,0">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TextBox PlaceholderText="Search"/>
      <Button Grid.Column="1"
              Command="{x:Bind Folder.SynchronizeCommand, Mode=OneWay}">
        <SymbolIcon Symbol="Sync"/>
      </Button>
    </Grid>
    <Grid Grid.Row="1"
          Margin="8">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TextBlock FontSize="20"
                 FontWeight="SemiBold"
                 Text="{x:Bind Folder.Name, Mode=OneWay}"/>
    </Grid>
    <Grid Grid.Row="2">
      <controls:MessageListView HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ItemsSource="{x:Bind Folder.Messages, Mode=OneWay}"/>
    </Grid>
  </Grid>
</UserControl>
