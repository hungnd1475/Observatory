<UserControl x:Class="Observatory.UI.Views.Mail.MessageSummaryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="using:Observatory.UI.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:models="using:Observatory.Core.Models"
             xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers"
             xmlns:ui="using:Observatory.UI"
             d:DesignHeight="300"
             d:DesignWidth="400"
             mc:Ignorable="d">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
          <SolidColorBrush x:Key="FlaggedColor" Color="#FFFFFFCC"/>
          <SolidColorBrush x:Key="ArchiveIconColor" Color="#FF196A35"/>
          <SolidColorBrush x:Key="DeleteIconColor" Color="#FFD72831"/>
          <SolidColorBrush x:Key="FlagIconColor" Color="#FFAC2E00"/>
          <SolidColorBrush x:Key="UnflagIconColor" Color="#FFE32A34"/>
          <SolidColorBrush x:Key="HighImportanceIconColor" Color="#FFE8504F"/>
          <SolidColorBrush x:Key="UnreadColor" Color="{ThemeResource SystemAccentColorDark2}"/>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
          <SolidColorBrush x:Key="FlaggedColor" Color="#FFFFFFCC"/>
          <SolidColorBrush x:Key="ArchiveIconColor" Color="#FF196A35"/>
          <SolidColorBrush x:Key="DeleteIconColor" Color="#FFD72831"/>
          <SolidColorBrush x:Key="FlagIconColor" Color="#FFAC2E00"/>
          <SolidColorBrush x:Key="UnflagIconColor" Color="#FFE32A34"/>
          <SolidColorBrush x:Key="HighImportanceIconColor" Color="#FFE8504F"/>
          <SolidColorBrush x:Key="UnreadColor" Color="{ThemeResource SystemAccentColorDark2}"/>
        </ResourceDictionary>
      </ResourceDictionary.ThemeDictionaries>

      <Style x:Key="MessageSummaryViewArchiveButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <FontIcon x:Name="Icon"
                        FontSize="16"
                        Glyph="{StaticResource ArchiveGlyph}">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource ArchiveIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource ArchiveIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
              </FontIcon>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="MessageSummaryViewDeleteButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <FontIcon x:Name="Icon"
                        FontSize="16"
                        Glyph="{StaticResource DeleteGlyph}">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource DeleteIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource DeleteIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <VisualState.Setters>
                        <Setter Target="Icon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
              </FontIcon>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="MessageSummaryViewToggleFlagButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ToggleButton">
              <Grid Background="{TemplateBinding Background}">
                <FontIcon x:Name="FlagIcon"
                          FontSize="16"
                          Glyph="{StaticResource FlagGlyph}"/>
                <FontIcon x:Name="UnflagIcon"
                          FontSize="16"
                          Glyph="{StaticResource UnflagGlyph}"
                          Visibility="Collapsed">
                  <FontIcon.RenderTransform>
                    <TranslateTransform X="2"/>
                  </FontIcon.RenderTransform>
                </FontIcon>
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="PointerOver">
                      <VisualState.Setters>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource FlagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                      <VisualState.Setters>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource FlagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                      <VisualState.Setters>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Checked">
                      <VisualState.Setters>
                        <Setter Target="UnflagIcon.Visibility" Value="Visible"/>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                        <Setter Target="UnflagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="CheckedPointerOver">
                      <VisualState.Setters>
                        <Setter Target="UnflagIcon.Visibility" Value="Visible"/>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                        <Setter Target="UnflagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="CheckedPressed">
                      <VisualState.Setters>
                        <Setter Target="UnflagIcon.Visibility" Value="Visible"/>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                        <Setter Target="UnflagIcon.Foreground" Value="{ThemeResource UnflagIconColor}"/>
                      </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="CheckedDisabled">
                      <VisualState.Setters>
                        <Setter Target="UnflagIcon.Visibility" Value="Visible"/>
                        <Setter Target="FlagIcon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                        <Setter Target="UnflagIcon.Foreground" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                      </VisualState.Setters>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid x:Name="ContentGrid"
        x:DefaultBindMode="OneWay"
        Background="Transparent"
        Opacity="0">
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="4"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Rectangle HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch"
                 Fill="{ThemeResource UnreadColor}"
                 Visibility="{x:Bind ui:Converters.BoolNegationToVisibility(ViewModel.IsRead)}"/>
      <Grid Grid.Column="1"
            Margin="16,8">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <TextBlock x:Name="CorrespondentsText"
                   FontSize="16"
                   Text="{x:Bind ViewModel.Correspondents}"/>
        <StackPanel Grid.Column="1"
                    HorizontalAlignment="Right"
                    d:Visibility="Collapsed"
                    Orientation="Horizontal"
                    Spacing="3"
                    Visibility="{x:Bind ui:Converters.BoolNegationToVisibility(IsPointerOver)}">
          <FontIcon FontSize="16"
                    Glyph="&#xE16C;"
                    Visibility="{x:Bind ViewModel.HasAttachments}"/>
          <FontIcon x:Name="ImportanceIcon"
                    FontSize="16"
                    Visibility="Collapsed"/>
          <FontIcon x:Name="FlagIcon"
                    FontSize="16"
                    Foreground="{ThemeResource UnflagIconColor}"
                    Glyph="&#xE129;"
                    Visibility="{x:Bind ViewModel.IsFlagged}"/>
        </StackPanel>
        <StackPanel Grid.Column="1"
                    HorizontalAlignment="Right"
                    d:Visibility="Visible"
                    Orientation="Horizontal"
                    Spacing="3"
                    Visibility="{x:Bind IsPointerOver}">
          <Button Command="{x:Bind ViewModel.ArchiveCommand}"
                  Style="{StaticResource MessageSummaryViewArchiveButtonStyle}"
                  ToolTipService.ToolTip="Archive this item"/>
          <Button Command="{x:Bind ViewModel.DeleteCommand}"
                  Style="{StaticResource MessageSummaryViewDeleteButtonStyle}"
                  ToolTipService.ToolTip="Delete this item"/>
          <controls:OneWayToggleButton x:Name="ToggleFlagButton"
                                       Command="{x:Bind ViewModel.ToggleFlagCommand}"
                                       IsChecked="{x:Bind ViewModel.IsFlagged}"
                                       Style="{StaticResource MessageSummaryViewToggleFlagButtonStyle}"
                                       ToolTipService.ToolTip="Set flag on this item"/>
        </StackPanel>
        <TextBlock x:Name="SubjectText"
                   Grid.Row="1"
                   Text="{x:Bind ViewModel.Subject}"/>
        <TextBlock Grid.Row="1"
                   Grid.Column="1"
                   Margin="8,0,0,0"
                   FontSize="12"
                   Foreground="{ThemeResource SystemColorGrayTextBrush}"
                   Text="{x:Bind ViewModel.FormattedReceivedDateTime}"
                   TextAlignment="Right"/>
        <TextBlock Grid.Row="2"
                   Foreground="{ThemeResource SystemColorGrayTextBrush}"
                   Text="{x:Bind ViewModel.Preview}"/>
      </Grid>
    </Grid>
    <Rectangle Grid.Row="1"
               Height="1"
               HorizontalAlignment="Stretch"
               Fill="{ThemeResource SystemBaseLowColor}"/>
    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind StateName}"
                                          To="Normal"/>
          </VisualState.StateTriggers>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind StateName}"
                                          To="PointerOver"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentGrid.Background" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
          </VisualState.Setters>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind StateName}"
                                          To="Selected"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentGrid.Background" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
          </VisualState.Setters>
        </VisualState>

        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind StateName}"
                                          To="Flagged"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentGrid.Background" Value="{ThemeResource FlaggedColor}"/>
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.IsFlagged}"
                                          To="True"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ToggleFlagButton.(ToolTipService.ToolTip)" Value="Clear flag on this item"/>
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.IsRead}"
                                          To="False"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="SubjectText.FontWeight" Value="SemiBold"/>
            <Setter Target="CorrespondentsText.FontWeight" Value="SemiBold"/>
            <Setter Target="SubjectText.Foreground" Value="{ThemeResource UnreadColor}"/>
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState x:Name="Low">
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.Importance}">
              <triggers:IsEqualStateTrigger.To>
                <models:Importance>Low</models:Importance>
              </triggers:IsEqualStateTrigger.To>
            </triggers:IsEqualStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ImportanceIcon.Glyph" Value="{StaticResource LowImportanceGlyph}"/>
            <Setter Target="ImportanceIcon.Visibility" Value="Visible"/>
          </VisualState.Setters>
        </VisualState>

        <VisualState x:Name="High">
          <VisualState.StateTriggers>
            <triggers:IsEqualStateTrigger Value="{x:Bind ViewModel.Importance}">
              <triggers:IsEqualStateTrigger.To>
                <models:Importance>High</models:Importance>
              </triggers:IsEqualStateTrigger.To>
            </triggers:IsEqualStateTrigger>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ImportanceIcon.Glyph" Value="{StaticResource HighImportanceGlyph}"/>
            <Setter Target="ImportanceIcon.Foreground" Value="{ThemeResource HighImportanceIconColor}"/>
            <Setter Target="ImportanceIcon.Visibility" Value="Visible"/>
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>

      <VisualStateGroup>
        <VisualState>
          <VisualState.StateTriggers>
            <triggers:IsNotEqualStateTrigger Value="{x:Bind ViewModel}"
                                             To="{x:Null}"/>
          </VisualState.StateTriggers>
          <VisualState.Setters>
            <Setter Target="ContentGrid.Opacity" Value="1"/>
          </VisualState.Setters>
        </VisualState>
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</UserControl>
